@model Aasaan_Admin_Form.Models.LoginModel
@{
    ViewData["Title"] = "Log In";
}

<h2>@ViewData["Title"]</h2>
<hr />
<div class="row">
    <div class="col-md-4">

        <form id="login-form">


            <div id="api-error-message" class="text-danger mb-3" role="alert"></div>

            <div class="form-group mb-3">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" autocomplete="username" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" autocomplete="current-password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button id="login-button" type="submit" class="btn btn-primary">Log In</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const loginForm = document.getElementById('login-form');
            loginForm.addEventListener('submit', async function (event) {
                event.preventDefault();

                const loginButton = document.getElementById('login-button');
                const errorMessageDiv = document.getElementById('api-error-message');
                errorMessageDiv.textContent = '';
                loginButton.disabled = true;
                loginButton.textContent = 'Logging In...';

                
                const email = document.getElementById('Username').value; 
                const password = document.getElementById('Password').value;

                
                const apiUrl = new URL('https://localhost:7127/api/Account/LogIn');
                apiUrl.searchParams.append('Email', email);
                apiUrl.searchParams.append('Password', password);
                debugger;
                try {
                   
                    const response = await fetch(apiUrl, {
                        method: 'POST'
                    });

                    if (response.ok) {
                        const data = await response.json();

                        
                        if (data && data.data && data.data.token) {
                            const token = data.data.token;
                            const userEmail = data.data.email; 

                            debugger;
                            
                            window.location.href = `/Home/ExternalLoginCallback?token=${encodeURIComponent(token)}&username=${encodeURIComponent(userEmail)}`;
                        } else {
                           
                            errorMessageDiv.textContent = 'Login successful, but token was not provided.';
                        }

                    } else {
                        
                        errorMessageDiv.textContent = 'Invalid email or password.';
                    }
                } catch (error) {
                    console.error('Login request failed:', error);
                    errorMessageDiv.textContent = 'Cannot connect to the login service. Ensure the API is running.';
                } finally {
                    loginButton.disabled = false;
                    loginButton.textContent = 'Log In';
                }
            });
        });
    </script>
}